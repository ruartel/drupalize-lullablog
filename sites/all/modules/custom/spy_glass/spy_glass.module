<?php
/*
* Implements hook_menu().
*/

use function PHPSTORM_META\map;

function spy_glass_menu(){
    $items=array();
    $items['node/%node/spy_glass']=array(
        'title' => 'Spy Glass',
        'description' => 'Take a closer look',
        'page callback' => 'spy_glass_page',
        'page arguments' => array(1),
        'access callback' => 'node_access',
        'access arguments' => array('view',1),
        'type' => MENU_LOCAL_TASK,
    );
    return $items;
}

/*
* Implements hook_theme().
*/
function spy_glass_theme(){
    return array(
        'spy_glass_item'=>array(
            'arguments'=>array('title'=>NULL, 'data'=>NULL),
            'template'=>'spy-glass-item',
        ),
        // 'spy_glass_item'=>array(
        //     'variables'=>array('item'=>NULL),
        // ),
    );
}

// function theme_spy_glass_item($variables){
//     $output = '<p>';
//     $output .= '<strong>' . check_plain($variables['title']) . '</strong><br />';
//     $output .= check_plain($variables['data']);
//     $output .= '</p>';
//     return $output;
// }

function spy_glass_page($node){
    $information = _spy_glass_serious_spying_business($node);
    $content = array();
    foreach($information as $item){
        $content[] = array(
            '#type'=>'markup',
            '#markup'=>theme('spy_glass_item',$item),
        );
    }
    return $content;
}

function spy_glass_preprocess_spy_glass_item(&$variables){
    $variables['title']=check_plain($variables['title']);
    $variables['data']=check_plain($variables['data']);
    $variables['module_name']=t('spay_glass');
}

function _spy_glass_serious_spying_business($node){
    $information = array();
    $information[]=array(
        'title' => t('Title Character Count'),
        'data' => t('some @num characters data $node->title', array('@num'=> strlen($node->title))),
    );
    $seconds = $node->changed - $node->created;
    $information[]=array(
        'title'=>t('timestamp'),
        'data'=> t('node $node->changed seconds @seconds diff from $node->created',array('@seconds'=>$seconds)),
    );
    if($node->translate == 0){
        $information[]=array(
            'title'=>t('translated?'),
            'data' => t('node is NOT translated'),
        );
    }
    $information[]=array(
        'title'=>t('hash'),
        'data' => md5($node->title),
    );
    $information[]=array(
        'title'=>t('Nefarious data'),
        'data'=>'<a href="" onclick="alert(\'PWNED!\'); return false;">click me</a>',
    );
    return $information;
}